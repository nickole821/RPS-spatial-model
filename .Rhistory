df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
df_freq <- df_freq %>%
rename(sim = arquivo_origem)
df_freq <- df_freq %>%
mutate(prob = 0.4)
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/p04.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-5"
files <- list.files(path, pattern = ".*freq\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[1]]
df_freq <- bind_rows(freq_list, .id = "arquivo_origem")
df_freq <- df_freq[,-2]
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
df_freq <- df_freq %>%
rename(sim = arquivo_origem)
df_freq <- df_freq %>%
mutate(prob = 0.5)
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/p05.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-6"
files <- list.files(path, pattern = ".*freq\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[1]]
df_freq <- bind_rows(freq_list, .id = "arquivo_origem")
df_freq <- df_freq[,-2]
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
df_freq <- df_freq %>%
rename(sim = arquivo_origem)
df_freq <- df_freq %>%
mutate(prob = 0.6)
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/p06.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-7"
files <- list.files(path, pattern = ".*freq\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[1]]
df_freq <- bind_rows(freq_list, .id = "arquivo_origem")
df_freq <- df_freq[,-2]
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
df_freq <- df_freq %>%
rename(sim = arquivo_origem)
df_freq <- df_freq %>%
mutate(prob = 0.7)
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/p07.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-8"
files <- list.files(path, pattern = ".*freq\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[1]]
df_freq <- bind_rows(freq_list, .id = "arquivo_origem")
df_freq <- df_freq[,-2]
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
df_freq <- df_freq %>%
rename(sim = arquivo_origem)
df_freq <- df_freq %>%
mutate(prob = 0.8)
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/p08.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-9"
files <- list.files(path, pattern = ".*freq\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[1]]
df_freq <- bind_rows(freq_list, .id = "arquivo_origem")
df_freq <- df_freq[,-2]
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
df_freq <- df_freq %>%
rename(sim = arquivo_origem)
df_freq <- df_freq %>%
mutate(prob = 0.9)
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/p09.csv")
##
path <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/"
files <- list.files(path, pattern = ".*p\\.csv$",
full.names = TRUE, recursive = TRUE)
##
path <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/"
files <- list.files(path, pattern = ".*p\\.csv$",
full.names = TRUE, recursive = TRUE)
files <- list.files(path, pattern = ".*p*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
files <- list.files(path, pattern = "^p.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[1]]
path_all
##
path_all <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/"
##
path_all <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/"
files_all <- list.files(path, pattern = "^p.*\\.csv$",
full.names = TRUE, recursive = TRUE)
##
path_all <- "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/"
files_all <- list.files(path_all, pattern = "^p.*\\.csv$",full.names = TRUE,
recursive = TRUE)
print(files_all)
freq_list_all <- lapply(files_all, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list_all[[1]]
df_freq_all <- bind_rows(freq_list_all)
str(df_freq_all)
df_freq <- df_freq[,-1]
df_freq_all <- df_freq_all[,-1]
str(df_freq_all)
df_freq_all <- df_freq_all %>%
mutate(neighbour = "equal")
str(df_freq_all)
write.csv(df_freq_all, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv")
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-1", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-2", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-3", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-4", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-5", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-6", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-7", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-8", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/0-9", recursive = TRUE)
unlink("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/1", recursive = TRUE)
a <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv")
View(a)
a <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv")
a <-a %>%
mutate(freq_0_O = 1/3, freq_0_Y = 1/3, freq_0_B = 1/3)
View(a)
write.csv(a, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv")
df_freq <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv")
gc()
df_freq <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv")
str(df_freq)
df_freq <- df_freq[,-1:2]
df_freq <- df_freq[,-(1:2)]
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv")
df_freq1 <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv")
View(df_freq1)
df_freq1 <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv",
header = T)
View(df_freq1)
df_freq <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv",
header = T)
View(df_freq)
df_freq <- df_freq[,-1]
View(df_freq)
df_media <- df_freq %>%
group_by(Generation, strategy, sim) %>%
summarise(freq_media = mean(freq), .groups = "drop")
View(df_media)
# Defina o diretório principal onde estão as pastas
path <- "./output/data/deterministic/initial_freq/O01-Y01-B08"
# Defina o diretório principal onde estão as pastas
path <- "./output/data/deterministic/initial_freq/O01-Y01-B08"
files <- list.files(path, pattern = ".freq*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
files <- list.files(path, pattern = ".*freq.\\.csv$",
full.names = TRUE, recursive = TRUE)
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[1]]
df_freq <- bind_rows(freq_list, .id = "id")
View(freq_list)
View(df_freq)
str(df_freq)
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
str(df_freq)
df_freq <- df_freq %>%
rename(sim = id)
str(df_freq)
df_freq <- df_freq %>%
mutate(prob = 0)
str(df_freq)
df_freq <- df_freq %>%
mutate(freq_0_O = 0.1, freq_0_Y = 0.1, freq_0_B = 0.8)
str(df_freq)
write.csv(df_freq, "./output/data/deterministic/initial_freq/freq_O01-Y01-B08.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/deterministic/initial_freq/O0001-Y049-B49"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
# Defina o diretório principal onde estão as pastas
path <- "./output/data/deterministic/initial_freq/O0001-Y049-B049"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[1]]
df_freq <- bind_rows(freq_list, .id = "id")
str(df_freq)
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
str(df_freq)
df_freq <- df_freq %>%
rename(sim = id)
str(df_freq)
df_freq <- df_freq %>%
mutate(prob = 0, freq_0_O = 0.01, freq_0_Y = 0.49, freq_0_B = 0.49)
str(df_freq)
write.csv(df_freq, "./output/data/deterministic/initial_freq/freq_O0001-Y049-B049.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/deterministic/initial_freq/O0001-Y049-B049"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[1]]
freq_list[[2]]
df_freq <- bind_rows(freq_list, .id = "id")
str(df_freq)
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
str(df_freq)
df_freq <- df_freq %>%
rename(sim = id)
str(df_freq)
df_freq <- df_freq %>%
mutate(prob = 0, freq_0_O = 0.01, freq_0_Y = 0.49, freq_0_B = 0.49)
str(df_freq)
write.csv(df_freq, "./output/data/deterministic/initial_freq/freq_O001-Y049-B049.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/deterministic/initial_freq/O02-Y02-B06"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[2]]
df_freq <- bind_rows(freq_list, .id = "id")
str(df_freq)
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
str(df_freq)
df_freq <- df_freq %>%
rename(sim = id)
str(df_freq)
df_freq <- df_freq %>%
mutate(prob = 0, freq_0_O = 0.2, freq_0_Y = 0.2, freq_0_B = 0.6)
str(df_freq)
write.csv(df_freq, "./output/data/deterministic/initial_freq/freq_O02-Y02-B06.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/deterministic/initial_freq/O015-Y015-B07"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[2]]
df_freq <- bind_rows(freq_list, .id = "id")
str(df_freq)
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
str(df_freq)
df_freq <- df_freq %>%
rename(sim = id)
df_freq <- df_freq %>%
mutate(prob = 0, freq_0_O = 0.15, freq_0_Y = 0.15, freq_0_B = 0.7)
str(df_freq)
write.csv(df_freq, "./output/data/deterministic/initial_freq/freq_O015-Y015-B07.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/deterministic/initial_freq/O025-Y025-B05"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[2]]
df_freq <- bind_rows(freq_list, .id = "id")
str(df_freq)
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
str(df_freq)
df_freq <- df_freq %>%
rename(sim = id)
str(df_freq)
df_freq <- df_freq %>%
mutate(prob = 0, freq_0_O = 0.25, freq_0_Y = 0.25, freq_0_B = 0.5)
str(df_freq)
write.csv(df_freq, "./output/data/deterministic/initial_freq/freq_O025-Y025-B05.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/deterministic/initial_freq/"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[2]]
df_freq <- bind_rows(freq_list, .id = NULL)
str(df_freq)
df_freq <- df_freq[,-1]
str(df_freq)
write.csv(df_freq, "./output/data/deterministic/initial_freq/freq.csv")
a <- read.csv("./output/data/deterministic/initial_freq/freq.csv")
View(a)
df_freq <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv",
header = T)
str(df_freq)
df_freq <- df_freq[,-1]
df_media <- df_freq %>%
group_by(Generation, strategy, sim, prob) %>%
summarise(freq_media = mean(freq), .groups = "drop")
df_media
ggplot(df_media, aes(aes(x = Generation, y = freq_media, color = as.factor(strategy),
group = interaction(prob, strategy)))) +
geom_line(alpha = 0.3, size = 0.5) +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
df_media
ggplot(df_media, aes(x = Generation, y = freq_media, color = as.factor(strategy),
group = interaction(prob, strategy))) +
geom_line(alpha = 0.3, size = 0.5) +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
View(df_media)
df_media <- df_freq %>%
group_by(Generation, strategy, sim, prob) %>%
summarise(freq_media = mean(freq))
df_media <- df_freq %>%
group_by(Generation, strategy, prob) %>%
summarise(freq_media = mean(freq), .groups = "drop")
df_media
ggplot(df_media, aes(x = Generation, y = freq_media, color = as.factor(strategy),
group = interaction(prob, strategy))) +
geom_line(alpha = 0.3, size = 0.5) +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
ggplot(df_media, aes(x = Generation, y = freq_media, color = as.factor(strategy),
group = interaction(prob, strategy))) +
geom_line(alpha = 0.3, size = 0.5) +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_y_continuous(lim = c(0,1))
df_media <- df_freq %>%
group_by(Generation, strategy, prob) %>%
summarise(freq_media = mean(freq), freq_sd = sd(freq), .groups = "drop")
df_media
ggplot(df_media, aes(x = Generation, y = freq_media, color = as.factor(strategy),
group = interaction(prob, strategy))) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.2, color = NA) +
geom_line(alpha = 0.3, size = 0.5) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Frequência Média com Desvio Padrão") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue")) +  # Mesmas cores da linha
scale_y_continuous(lim = c(0,1))
ggplot(df_media, aes(x = Generation, y = freq_media, color = as.factor(strategy),
group = interaction(prob, strategy))) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.2, color = NA) +
geom_line(alpha = 0.3, size = 0.5) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Frequência Média com Desvio Padrão") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"))
write.csv(df_media "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq_mean_sd.csv")
write.csv(df_media, "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq_mean_sd.csv")
dir.create("./output/data/stochastic/simetric_payoff-matrix/neighbors")
dir.create("./output/data/stochastic/simetric_payoff-matrix/neighbors/p05")
source("./r-scripts/stochastic-model/functions.R")
library(readr)
strategies <- c("O", "Y", "B")
a <- 2
b <- 1/a
payoff_matrix <- matrix(c(1, b, a,
a, 1, b,
b, a, 1), byrow = T, nrow = 3)
colnames(payoff_matrix) <- strategies
rownames(payoff_matrix) <- strategies
payoff_matrix
n_sim <- 100
prob_reproduce <- 0.5
size <- 100
dir.create("./output/data/stochastic/simetric_payoff-matrix/neighbors/p05")
seeds <- readRDS("data/sementes_simulacao.rds")
start_time <- Sys.time()
for (i in 1:n_sim) {
cat("Rodando simulação", i, "\n")
set.seed(seeds[i])
position_matrix <- matrix(sample(strategies, size^2, replace = TRUE),
nrow = size, ncol = size)
result <- simulation(position_matrix, payoff_matrix, num_generations = 100,
prob_reproduce, strategy = TRUE)
pasta_resultados <- file.path("./output/data/stochastic/simetric_payoff-matrix/neighbors/p05/",
paste0("sim_", i))
dir.create(pasta_resultados, recursive = TRUE)
matriz_path <- file.path(pasta_resultados, paste0("matrix.csv"))
freq_path <- file.path(pasta_resultados, paste0("freq.csv"))
matrizes <- do.call(rbind, lapply(seq(1, length(result$matrices), by = 20), function(i) {
data.frame(Generation = i - 1, as.data.frame(result$matrices[[i]]))
}))
write.csv(matrizes, matriz_path)
write.csv(result$frequencies, freq_path)
}
cat("Acabou! Ufa! :)\n")
end_time <- Sys.time()
end_time - start_time
source("./r-scripts/stochastic-model/functions.R")
library(readr)
strategies <- c("O", "Y", "B")
a <- 2
b <- 1/a
payoff_matrix <- matrix(c(1, b, a,
a, 1, b,
b, a, 1), byrow = T, nrow = 3)
colnames(payoff_matrix) <- strategies
rownames(payoff_matrix) <- strategies
payoff_matrix
n_sim <- 100
prob_reproduce <- 0.25
size <- 100
dir.create("./output/data/stochastic/simetric_payoff-matrix/neighbors/p025")
seeds <- readRDS("data/sementes_simulacao.rds")
start_time <- Sys.time()
for (i in 1:n_sim) {
cat("Rodando simulação", i, "\n")
set.seed(seeds[i])
position_matrix <- matrix(sample(strategies, size^2, replace = TRUE),
nrow = size, ncol = size)
result <- simulation(position_matrix, payoff_matrix, num_generations = 100,
prob_reproduce, strategy = TRUE)
pasta_resultados <- file.path("./output/data/stochastic/simetric_payoff-matrix/neighbors/p025/",
paste0("sim_", i))
dir.create(pasta_resultados, recursive = TRUE)
matriz_path <- file.path(pasta_resultados, paste0("matrix.csv"))
freq_path <- file.path(pasta_resultados, paste0("freq.csv"))
matrizes <- do.call(rbind, lapply(seq(1, length(result$matrices), by = 20), function(i) {
data.frame(Generation = i - 1, as.data.frame(result$matrices[[i]]))
}))
write.csv(matrizes, matriz_path)
write.csv(result$frequencies, freq_path)
}
cat("Acabou! Ufa! :)\n")
end_time <- Sys.time()
end_time - start_time
source("./r-scripts/stochastic-model/functions.R")
library(readr)
strategies <- c("O", "Y", "B")
a <- 2
b <- 1/a
payoff_matrix <- matrix(c(1, b, a,
a, 1, b,
b, a, 1), byrow = T, nrow = 3)
colnames(payoff_matrix) <- strategies
rownames(payoff_matrix) <- strategies
payoff_matrix
n_sim <- 100
prob_reproduce <- 0
size <- 100
dir.create("./output/data/stochastic/simetric_payoff-matrix/neighbors/p0")
seeds <- readRDS("data/sementes_simulacao.rds")
start_time <- Sys.time()
for (i in 1:n_sim) {
cat("Rodando simulação", i, "\n")
set.seed(seeds[i])
position_matrix <- matrix(sample(strategies, size^2, replace = TRUE),
nrow = size, ncol = size)
result <- simulation(position_matrix, payoff_matrix, num_generations = 100,
prob_reproduce, strategy = TRUE)
pasta_resultados <- file.path("./output/data/stochastic/simetric_payoff-matrix/neighbors/p0/",
paste0("sim_", i))
dir.create(pasta_resultados, recursive = TRUE)
matriz_path <- file.path(pasta_resultados, paste0("matrix.csv"))
freq_path <- file.path(pasta_resultados, paste0("freq.csv"))
matrizes <- do.call(rbind, lapply(seq(1, length(result$matrices), by = 20), function(i) {
data.frame(Generation = i - 1, as.data.frame(result$matrices[[i]]))
}))
write.csv(matrizes, matriz_path)
write.csv(result$frequencies, freq_path)
}
cat("Acabou! Ufa! :)\n")
end_time <- Sys.time()
end_time - start_time
