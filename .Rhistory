p <- ggplot(matrix_df, aes(x = column, y = row, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_y_reverse() +
labs(x = element_blank(), y = element_blank()) +
theme_classic() +
theme(axis.text = element_blank(), axis.ticks = element_blank()) +
labs(title = paste("Geração:", generation)) +
theme(text = element_text(size = 20))
img_path <- paste0("./output/data/stochastic/simetric_payoff-matrix/neighbors/temporary/", generation, ".png")
ggsave(img_path, plot = p, width = 7, height = 5, dpi = 300)
return(img_path)
}
image_paths <- c()
for (i in 1:length(result$matrices)) {
img_path <- generate_image(result$matrices[[i]], i - 1)
image_paths <- c(image_paths, img_path)
}
img_list <- lapply(image_paths, image_read)
gif <- image_animate(image_join(img_list), fps = 10) # Criar o GIF usando magick
image_write(gif, "./output/data/stochastic/simetric_payoff-matrix/neighbors/p04.gif") # Salvar o GIF
df_freq <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv",
header = T)
str(df_freq)
df_freq$freq_0_O
str(df_freq)
df_freq <- df_freq[,-1]
df_freq <- df_freq %>%
filter(prob == 0)
str(df_freq)
df_media <- df_freq %>%
group_by(Generation, strategy, prob) %>%
summarise(freq_media = mean(freq), freq_sd = sd(freq), .groups = "drop")
df_media
freq_p0 <- ggplot(df_freq, aes(x = Generation, y = freq, color = as.factor(strategy),
group = interaction(sim, strategy))) +
geom_line(size = 0.5, alpha = 0.3) +
geom_line(data = df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy),
group = strategy),
size = 1.5, linetype = "solid") +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "prob = 0") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
ggplot(df_freq, aes(x = Generation, y = freq, color = as.factor(strategy),
group = interaction(sim, strategy))) +
geom_line(size = 0.5, alpha = 0.3) +
geom_line(data = df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy),
group = strategy),
size = 1.5, linetype = "solid") +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "prob = 0") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
ggsave(filename = "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq_p0.pdf",
plot = freq_p0, device = pdf, width = 30, height = 25, units = "cm")
freq_mean_p0 <- ggplot(df_media, aes(x = Generation, y = freq_media, color = as.factor(strategy),
group = interaction(prob, strategy))) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.2, color = NA) +
geom_line(alpha = 0.3, size = 0.5) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Média, prob = 0") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"))+
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
ggsave(filename = "./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/mean_p0.pdf",
plot = freq_mean_p0, device = pdf, width = 30, height = 25, units = "cm")
df_freq <- read.csv("./output/data/stochastic/simetric_payoff-matrix/prob_reproduce/freq.csv",
header = T)
df_freq <- df_freq %>%
filter(prob == 0)
str(df_freq)
df_media <- df_freq %>%
group_by(Generation, strategy, prob) %>%
summarise(freq_media = mean(freq), freq_sd = sd(freq), .groups = "drop")
df_media
freq_MF_O <- fft(filter(df_media, strategy == "O"))
filter(df_media, strategy == "O")
df_O <- filter(df_media, strategy == "O")
df_B <- filter(df_media, strategy == "B")
df_Y <- filter(df_media, strategy == "Y")
freq_MF_O <- fft(df_O$freq_media)
freq_MF_Y <- fft(df_Y$freq_media)
freq_MF_B <- fft(df_B$freq_media)
mod_MF_O <- Mod(freq_MF_O)
mod_MF_O <- mod_MF_O[-1]
mod_MF_Y <- Mod(freq_MF_Y)
mod_MF_Y <- mod_MF_Y[-1]
mod_MF_B <- Mod(freq_MF_B)
mod_MF_B <- mod_MF_B[-1]
n <- length(df_media$Generation) - 1
frequencias <- (0:(n-1)) / n
fft_MF <- data.frame(
Frequencia = rep(frequencias, 3),
Magnitude = c(mod_MF_O, mod_MF_Y, mod_MF_B),
Estrategia = rep(c("O", "Y", "B"), each = n),
Tipo = "MF"
)
n <- length(df_O$Generation) - 1
frequencias <- (0:(n-1)) / n
fft_MF <- data.frame(
Frequencia = rep(frequencias, 3),
Magnitude = c(mod_MF_O, mod_MF_Y, mod_MF_B),
Estrategia = rep(c("O", "Y", "B"), each = n),
Tipo = "MF"
)
fft_MF <- data.frame(
Frequencia = rep(frequencias, 3),
Magnitude = c(mod_MF_O, mod_MF_Y, mod_MF_B),
Estrategia = rep(c("O", "Y", "B"), each = n)
)
fft <- data.frame(
Frequencia = rep(frequencias, 3),
Magnitude = c(mod_MF_O, mod_MF_Y, mod_MF_B),
Estrategia = rep(c("O", "Y", "B"), each = n)
)
str(fft)
fft_df %>%
ggplot(aes(x = Frequencia, y = Magnitude, color = Estrategia)) +
geom_line(linetype = 1, size = 1.3) +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_x_continuous(limits = c(0, 0.5)) + # Normalização de Nyquist
labs(x = "Frequência Normalizada",
y = "Magnitude") +
theme_minimal() +
theme(text = element_text(size = 24), legend.position = "bottom",
legend.justification = "center")
fft %>%
ggplot(aes(x = Frequencia, y = Magnitude, color = Estrategia)) +
geom_line(linetype = 1, size = 1.3) +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_x_continuous(limits = c(0, 0.5)) + # Normalização de Nyquist
labs(x = "Frequência Normalizada",
y = "Magnitude") +
theme_minimal() +
theme(text = element_text(size = 24), legend.position = "bottom",
legend.justification = "center")
fft %>%
ggplot(aes(x = Frequencia, y = Magnitude, color = Estrategia)) +
geom_line(linetype = 1, size = 1.3) +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_x_continuous(limits = c(0, 0.5)) + # Normalização de Nyquist
labs(x = "Frequência Normalizada",
y = "Magnitude") +
theme_minimal() +
theme(text = element_text(size = 24), legend.position = "bottom",
legend.justification = "center")
source("output/data/stochastic/simetric_payoff-matrix/neighbors/real-r/function-real-r.R")
source("output/data/stochastic/neighbors/real-r/function-real-r.R")
library(readr)
strategies <- c("O", "Y", "B")
a <- 2
b <- 1/a
payoff_matrix <- matrix(c(1, b, a,
a, 1, b,
b, a, 1), byrow = T, nrow = 3)
colnames(payoff_matrix) <- strategies
rownames(payoff_matrix) <- strategies
payoff_matrix
n_sim <- 100
prob_reproduce <- 0.5
size <- 100
dir.create("./output/data/stochastic/simetric_payoff-matrix/neighbors/real-r/p05")
seeds <- readRDS("data/sementes_simulacao.rds")
start_time <- Sys.time()
for (i in 1:n_sim) {
cat("Rodando simulação", i, "\n")
set.seed(seeds[i])
position_matrix <- matrix(sample(strategies, size^2, replace = TRUE),
nrow = size, ncol = size)
result <- simulation_real_r(position_matrix, payoff_matrix, num_generations = 200,
prob_reproduce, strategy = TRUE, devide = FALSE)
pasta_resultados <- file.path("./output/data/stochastic/simetric_payoff-matrix/neighbors/real-r/p05/",
paste0("sim_", i))
dir.create(pasta_resultados, recursive = TRUE)
matriz_path <- file.path(pasta_resultados, paste0("matrix.csv"))
freq_path <- file.path(pasta_resultados, paste0("freq.csv"))
matrizes <- do.call(rbind, lapply(seq(1, length(result$matrices), by = 20), function(i) {
data.frame(Generation = i - 1, as.data.frame(result$matrices[[i]]))
}))
write.csv(matrizes, matriz_path)
write.csv(result$frequencies, freq_path)
}
library(tidyverse)
library(purrr)
# Defina o diretório principal onde estão as pastas
path <- "./output/data/stochastic/neighbors/real-r/p0/"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[2]]
df_freq <- bind_rows(freq_list, .id = "id")
str(df_freq)
df_freq <- df_freq[,-2]
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
str(df_freq)
df_freq <- df_freq %>%
rename(sim = id)
str(df_freq)
df_freq <- df_freq %>%
mutate(prob = 0, freq_0_O = 1/3, freq_0_Y = 1/3, freq_0_B = 1/3, neighbors = "TRUE", devide = "FALSE")
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/neighbors/real-r/p0.csv")
# Defina o diretório principal onde estão as pastas
path <- "./output/data/stochastic/neighbors/real-r/p025/"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[2]]
df_freq <- bind_rows(freq_list, .id = "id")
str(df_freq)
df_freq <- df_freq[,-2]
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
str(df_freq)
df_freq <- df_freq %>%
rename(sim = id)
str(df_freq)
df_freq <- df_freq %>%
mutate(prob = 0.25, freq_0_O = 1/3, freq_0_Y = 1/3, freq_0_B = 1/3, neighbors = "TRUE", devide = "FALSE")
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/neighbors/real-r/p025.csv")
df_freq <- read.csv("./output/data/stochastic/neighbors/teste_devide/p0.csv",
header = T)
df_freq <- read.csv("./output/data/stochastic/neighbors/real-r/p0.csv",
header = T)
str(df_freq)
df_freq$freq_0_O
str(df_freq)
df_freq <- df_freq[,-1]
df_freq <- df_freq %>%
filter(prob == 0)
str(df_freq)
df_media <- df_freq %>%
group_by(Generation, strategy, prob) %>%
summarise(freq_media = mean(freq), freq_sd = sd(freq), .groups = "drop")
df_media
ggplot(df_freq, aes(x = Generation, y = freq, color = as.factor(strategy),
group = interaction(sim, strategy))) +
geom_line(size = 0.5, alpha = 0.3) +
geom_line(data = df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy),
group = strategy),
size = 1.5, linetype = "solid") +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "prob = 0, real r") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
freq_p0 <- ggplot(df_freq, aes(x = Generation, y = freq, color = as.factor(strategy),
group = interaction(sim, strategy))) +
geom_line(size = 0.5, alpha = 0.3) +
geom_line(data = df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy),
group = strategy),
size = 1.5, linetype = "solid") +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "prob = 0, real r") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
ggsave(filename = "./output/data/stochastic/neighbors/real-r/freq_p0.pdf",
plot = freq_p0, device = pdf, width = 30, height = 25, units = "cm")
ggplot(df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy), group = strategy)) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.6, color = NA) +
geom_line(size = 1) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Média, prob = 0") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"))+
theme(text = element_text(size = 24))
freq_mean_p0 <- ggplot(df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy), group = strategy)) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.6, color = NA) +
geom_line(size = 1) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Média, prob = 0") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"))+
theme(text = element_text(size = 24))
ggsave(filename = "./output/data/stochastic/neighbors/mean_p0.pdf",
plot = freq_mean_p0, device = pdf, width = 30, height = 25, units = "cm")
write.csv(df_media, "./output/data/stochastic/simetric_payoff-matrix/neighbors/mean_p0.csv")
write.csv(df_media, "./output/data/stochastic/neighbors/mean_p0.csv")
df_freq <- read.csv("./output/data/stochastic/neighbors/real-r/p025.csv",
header = T)
str(df_freq)
df_freq$freq_0_O
df_freq <- df_freq[,-1]
df_freq <- df_freq %>%
filter(prob == 0.25)
str(df_freq)
df_media <- df_freq %>%
group_by(Generation, strategy, prob) %>%
summarise(freq_media = mean(freq), freq_sd = sd(freq), .groups = "drop")
df_media
freq_p025 <- ggplot(df_freq, aes(x = Generation, y = freq, color = as.factor(strategy),
group = interaction(sim, strategy))) +
geom_line(size = 0.5, alpha = 0.3) +
geom_line(data = df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy),
group = strategy),
size = 1.5, linetype = "solid") +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "prob = 0.25, real r") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
ggplot(df_freq, aes(x = Generation, y = freq, color = as.factor(strategy),
group = interaction(sim, strategy))) +
geom_line(size = 0.5, alpha = 0.3) +
geom_line(data = df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy),
group = strategy),
size = 1.5, linetype = "solid") +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "prob = 0.25, real r") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
ggsave(filename = "./output/data/stochastic/neighbors/real-r/freq_p025.pdf",
plot = freq_p025, device = pdf, width = 30, height = 25, units = "cm")
write.csv(df_media, "./output/data/stochastic/neighbors/mean_p025.csv")
freq_mean_p025 <- ggplot(df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy), group = strategy)) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.6, color = NA) +
geom_line(size = 1) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Média, prob = 0.25") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"))+
theme(text = element_text(size = 24))
ggplot(df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy), group = strategy)) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.6, color = NA) +
geom_line(size = 1) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Média, prob = 0.25") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"))+
theme(text = element_text(size = 24))
freq_mean_p025 <- ggplot(df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy), group = strategy)) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.6, color = NA) +
geom_line(size = 1) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Média, prob = 0.25") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"))+
theme(text = element_text(size = 24))
ggsave(filename = "./output/data/stochastic/neighbors/mean_p025.pdf",
plot = freq_mean_p025, device = pdf, width = 30, height = 25, units = "cm")
source("output/data/stochastic/neighbors/real-r/function-real-r.R")
library(readr)
strategies <- c("O", "Y", "B")
a <- 2
b <- 1/a
payoff_matrix <- matrix(c(1, b, a,
a, 1, b,
b, a, 1), byrow = T, nrow = 3)
colnames(payoff_matrix) <- strategies
rownames(payoff_matrix) <- strategies
payoff_matrix
n_sim <- 100
prob_reproduce <- 0.5
size <- 100
dir.create("./output/data/stochastic/neighbors/real-r/p05")
seeds <- readRDS("data/sementes_simulacao.rds")
start_time <- Sys.time()
for (i in 1:n_sim) {
cat("Rodando simulação", i, "\n")
set.seed(seeds[i])
position_matrix <- matrix(sample(strategies, size^2, replace = TRUE),
nrow = size, ncol = size)
result <- simulation_real_r(position_matrix, payoff_matrix, num_generations = 200,
prob_reproduce, strategy = TRUE, devide = FALSE)
pasta_resultados <- file.path("./output/data/stochastic/neighbors/real-r/p05/",
paste0("sim_", i))
dir.create(pasta_resultados, recursive = TRUE)
matriz_path <- file.path(pasta_resultados, paste0("matrix.csv"))
freq_path <- file.path(pasta_resultados, paste0("freq.csv"))
matrizes <- do.call(rbind, lapply(seq(1, length(result$matrices), by = 20), function(i) {
data.frame(Generation = i - 1, as.data.frame(result$matrices[[i]]))
}))
write.csv(matrizes, matriz_path)
write.csv(result$frequencies, freq_path)
}
cat("Acabou! Ufa! :)\n")
end_time <- Sys.time()
end_time - start_time
# Defina o diretório principal onde estão as pastas
path <- "./output/data/stochastic/neighbors/real-r/p05/"
files <- list.files(path, pattern = "^freq.*\\.csv$",
full.names = TRUE, recursive = TRUE)
print(files)
freq_list <- lapply(files, read.csv, sep = ",", stringsAsFactors = FALSE)
freq_list[[2]]
df_freq <- bind_rows(freq_list, .id = "id")
str(df_freq)
library(tidyverse)
library(purrr)
df_freq <- bind_rows(freq_list, .id = "id")
str(df_freq)
df_freq <- df_freq[,-2]
df_freq <- df_freq %>%
pivot_longer(cols = 3:5, names_to = "strategy", values_to = "freq")
str(df_freq)
df_freq <- df_freq %>%
rename(sim = id)
df_freq <- df_freq %>%
mutate(prob = 0.5, freq_0_O = 1/3, freq_0_Y = 1/3, freq_0_B = 1/3, neighbors = "TRUE", devide = "FALSE")
str(df_freq)
write.csv(df_freq, "./output/data/stochastic/neighbors/real-r/p05.csv")
unlink("./output/data/stochastic/neighbors/real-r/p0/", recursive = TRUE)
unlink("./output/data/stochastic/neighbors/real-r/p05/", recursive = TRUE)
df_freq <- read.csv("./output/data/stochastic/neighbors/real-r/p05.csv",
header = T)
str(df_freq)
df_freq$freq_0_O
df_freq <- df_freq[,-1]
df_freq <- df_freq %>%
filter(prob == 0.5)
str(df_freq)
df_media <- df_freq %>%
group_by(Generation, strategy, prob) %>%
summarise(freq_media = mean(freq), freq_sd = sd(freq), .groups = "drop")
df_media
group = interaction(sim, strategy))) +
ggplot(df_freq, aes(x = Generation, y = freq, color = as.factor(strategy),
group = interaction(sim, strategy))) +
geom_line(size = 0.5, alpha = 0.3) +
geom_line(data = df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy),
group = strategy),
size = 1.5, linetype = "solid") +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "prob = 0.5, real r") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
freq_p05 <- ggplot(df_freq, aes(x = Generation, y = freq, color = as.factor(strategy),
group = interaction(sim, strategy))) +
geom_line(size = 0.5, alpha = 0.3) +
geom_line(data = df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy),
group = strategy),
size = 1.5, linetype = "solid") +
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "prob = 0.5, real r") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
theme(text = element_text(size = 24)) +
scale_y_continuous(lim = c(0,1))
ggsave(filename = "./output/data/stochastic/neighbors/real-r/freq_p05.pdf",
plot = freq_p05, device = pdf, width = 30, height = 25, units = "cm")
write.csv(df_media, "./output/data/stochastic/neighbors/mean_p05.csv")
ggplot(df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy), group = strategy)) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.6, color = NA) +
geom_line(size = 1) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Média, prob = 0.5") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"))+
theme(text = element_text(size = 24))
freq_mean_p05 <- ggplot(df_media, aes(x = Generation, y = freq_media,
color = as.factor(strategy), group = strategy)) +
geom_ribbon(aes(ymin = freq_media - freq_sd, ymax = freq_media + freq_sd,
fill = as.factor(strategy)), alpha = 0.6, color = NA) +
geom_line(size = 1) +  # Linha da média
theme_minimal() +
labs(x = "Gerações", y = "Frequência", title = "Média, prob = 0.5") +
scale_color_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"),
name = "Estratégia", labels = c("Azul", "Laranja", "Amarelo")) +
scale_fill_manual(values = c("O" = "tomato2", "Y" = "gold2", "B" = "blue"))+
theme(text = element_text(size = 24))
ggsave(filename = "./output/data/stochastic/neighbors/mean_p05.pdf",
plot = freq_mean_p05, device = pdf, width = 30, height = 25, units = "cm")
